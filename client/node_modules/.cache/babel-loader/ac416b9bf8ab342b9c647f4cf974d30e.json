{"ast":null,"code":"'use strict';\n\nmodule.exports = one;\n\nvar u = require('unist-builder');\n\nvar all = require('./all');\n\nvar own = {}.hasOwnProperty; // Transform an unknown node.\n\nfunction unknown(h, node) {\n  if (text(node)) {\n    return h.augment(node, u('text', node.value));\n  }\n\n  return h(node, 'div', all(h, node));\n} // Visit a node.\n\n\nfunction one(h, node, parent) {\n  var type = node && node.type;\n  var fn; // Fail on non-nodes.\n\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`');\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type];\n  } else if (h.passThrough && h.passThrough.indexOf(type) > -1) {\n    fn = returnNode;\n  } else {\n    fn = h.unknownHandler;\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent);\n} // Check if the node should be renderered as a text node.\n\n\nfunction text(node) {\n  var data = node.data || {};\n\n  if (own.call(data, 'hName') || own.call(data, 'hProperties') || own.call(data, 'hChildren')) {\n    return false;\n  }\n\n  return 'value' in node;\n}\n\nfunction returnNode(h, node) {\n  var clone;\n\n  if (node.children) {\n    clone = Object.assign({}, node);\n    clone.children = all(h, node);\n    return clone;\n  }\n\n  return node;\n}","map":{"version":3,"sources":["/Users/bian/Desktop/CS/a/client/node_modules/mdast-util-to-hast/lib/one.js"],"names":["module","exports","one","u","require","all","own","hasOwnProperty","unknown","h","node","text","augment","value","parent","type","fn","Error","call","handlers","passThrough","indexOf","returnNode","unknownHandler","data","clone","children","Object","assign"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,GAAjB;;AAEA,IAAIC,CAAC,GAAGC,OAAO,CAAC,eAAD,CAAf;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,OAAD,CAAjB;;AAEA,IAAIE,GAAG,GAAG,GAAGC,cAAb,C,CAEA;;AACA,SAASC,OAAT,CAAiBC,CAAjB,EAAoBC,IAApB,EAA0B;AACxB,MAAIC,IAAI,CAACD,IAAD,CAAR,EAAgB;AACd,WAAOD,CAAC,CAACG,OAAF,CAAUF,IAAV,EAAgBP,CAAC,CAAC,MAAD,EAASO,IAAI,CAACG,KAAd,CAAjB,CAAP;AACD;;AAED,SAAOJ,CAAC,CAACC,IAAD,EAAO,KAAP,EAAcL,GAAG,CAACI,CAAD,EAAIC,IAAJ,CAAjB,CAAR;AACD,C,CAED;;;AACA,SAASR,GAAT,CAAaO,CAAb,EAAgBC,IAAhB,EAAsBI,MAAtB,EAA8B;AAC5B,MAAIC,IAAI,GAAGL,IAAI,IAAIA,IAAI,CAACK,IAAxB;AACA,MAAIC,EAAJ,CAF4B,CAI5B;;AACA,MAAI,CAACD,IAAL,EAAW;AACT,UAAM,IAAIE,KAAJ,CAAU,yBAAyBP,IAAzB,GAAgC,GAA1C,CAAN;AACD;;AAED,MAAIJ,GAAG,CAACY,IAAJ,CAAST,CAAC,CAACU,QAAX,EAAqBJ,IAArB,CAAJ,EAAgC;AAC9BC,IAAAA,EAAE,GAAGP,CAAC,CAACU,QAAF,CAAWJ,IAAX,CAAL;AACD,GAFD,MAEO,IAAIN,CAAC,CAACW,WAAF,IAAiBX,CAAC,CAACW,WAAF,CAAcC,OAAd,CAAsBN,IAAtB,IAA8B,CAAC,CAApD,EAAuD;AAC5DC,IAAAA,EAAE,GAAGM,UAAL;AACD,GAFM,MAEA;AACLN,IAAAA,EAAE,GAAGP,CAAC,CAACc,cAAP;AACD;;AAED,SAAO,CAAC,OAAOP,EAAP,KAAc,UAAd,GAA2BA,EAA3B,GAAgCR,OAAjC,EAA0CC,CAA1C,EAA6CC,IAA7C,EAAmDI,MAAnD,CAAP;AACD,C,CAED;;;AACA,SAASH,IAAT,CAAcD,IAAd,EAAoB;AAClB,MAAIc,IAAI,GAAGd,IAAI,CAACc,IAAL,IAAa,EAAxB;;AAEA,MACElB,GAAG,CAACY,IAAJ,CAASM,IAAT,EAAe,OAAf,KACAlB,GAAG,CAACY,IAAJ,CAASM,IAAT,EAAe,aAAf,CADA,IAEAlB,GAAG,CAACY,IAAJ,CAASM,IAAT,EAAe,WAAf,CAHF,EAIE;AACA,WAAO,KAAP;AACD;;AAED,SAAO,WAAWd,IAAlB;AACD;;AAED,SAASY,UAAT,CAAoBb,CAApB,EAAuBC,IAAvB,EAA6B;AAC3B,MAAIe,KAAJ;;AAEA,MAAIf,IAAI,CAACgB,QAAT,EAAmB;AACjBD,IAAAA,KAAK,GAAGE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBlB,IAAlB,CAAR;AACAe,IAAAA,KAAK,CAACC,QAAN,GAAiBrB,GAAG,CAACI,CAAD,EAAIC,IAAJ,CAApB;AACA,WAAOe,KAAP;AACD;;AAED,SAAOf,IAAP;AACD","sourcesContent":["'use strict'\n\nmodule.exports = one\n\nvar u = require('unist-builder')\nvar all = require('./all')\n\nvar own = {}.hasOwnProperty\n\n// Transform an unknown node.\nfunction unknown(h, node) {\n  if (text(node)) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n// Visit a node.\nfunction one(h, node, parent) {\n  var type = node && node.type\n  var fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.indexOf(type) > -1) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n// Check if the node should be renderered as a text node.\nfunction text(node) {\n  var data = node.data || {}\n\n  if (\n    own.call(data, 'hName') ||\n    own.call(data, 'hProperties') ||\n    own.call(data, 'hChildren')\n  ) {\n    return false\n  }\n\n  return 'value' in node\n}\n\nfunction returnNode(h, node) {\n  var clone\n\n  if (node.children) {\n    clone = Object.assign({}, node)\n    clone.children = all(h, node)\n    return clone\n  }\n\n  return node\n}\n"]},"metadata":{},"sourceType":"script"}