{"ast":null,"code":"var _jsxFileName = \"/home/bian/Desktop/Summer/edu/src/App.js\";\nimport React, { Component } from \"react\";\nimport PostData from \"./data/astronomy.json\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.answerLetters = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\n    this.exitQuiz = () => {\n      this.setState({\n        questionNum: 0,\n        isEnd: false,\n        isShowingAnswer: false,\n        chosenAnswer: \"\",\n        answersArray: [],\n        statusArray: [],\n        difficultyArray: [],\n        score: 0\n      });\n    };\n\n    this.reviewQuestions = () => {\n      this.setState({\n        questionNum: 0,\n        isEnd: false,\n        isShowingAnswer: false,\n        chosenAnswer: \"\",\n        answersArray: [],\n        statusArray: [],\n        difficultyArray: [],\n        score: 0\n      });\n    };\n\n    this.nextQuestion = () => {\n      this.setState({\n        isShowingAnswer: false\n      });\n\n      if (this.state.isShowingAnswer) {\n        this.setState({\n          statusArray: [...this.state.statusArray, \"✕\"]\n        });\n      } else {\n        if (this.state.chosenAnswer === PostData[this.state.questionNum].correct) {\n          this.setState({\n            score: this.state.score + 1,\n            statusArray: [...this.state.statusArray, \"✓\"]\n          });\n        } else {\n          this.setState({\n            statusArray: [...this.state.statusArray, \"✕\"]\n          });\n        }\n      }\n\n      this.setState({\n        answersArray: [...this.state.answersArray, this.state.chosenAnswer],\n        chosenAnswer: \"\"\n      });\n\n      if (this.state.questionNum + 1 < PostData.length) {\n        this.setState({\n          questionNum: this.state.questionNum + 1\n        });\n      } else {\n        this.setState({\n          isEnd: true\n        });\n      }\n    };\n\n    this.state = {\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0,\n      isSpecificTopicChosen: false,\n      topic: \"General Astronomy\"\n    };\n  }\n\n  setAnswer(event) {\n    console.log(event.target.value);\n    this.setState({\n      chosenAnswer: event.target.value,\n      checkStatus: true\n    });\n  }\n\n  showSolution() {\n    console.log(PostData[this.state.questionNum].correct);\n    this.setState({\n      isShowingAnswer: true\n    });\n  }\n\n  render() {\n    if (!this.state.isSpecificTopicChosen) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: this.state.topic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), this.state.isEnd ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"questionBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Score: \", this.state.score, \" / \", PostData.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Percentage:\", \" \", Math.round((this.state.score / PostData.length * 100).toFixed(2)), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), this.state.statusArray.map((answer, index) => {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [index + 1, \". \", answer, \" \\xA0\\xA0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 23\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              span: true,\n              id: \"buttonDesign\",\n              style: {\n                position: \"relative\",\n                top: \"40px\"\n              },\n              onClick: e => this.reviewQuestions(),\n              children: \"Take quiz again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"questionBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"questionTitleInner\",\n                id: \"questionTitle\",\n                children: [this.state.questionNum + 1, \".\\xA0\", PostData[this.state.questionNum].title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), PostData[this.state.questionNum].choices.map((option, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"questionBoxInner\",\n                      style: {\n                        backgroundColor: this.state.isShowingAnswer ? this.answerLetters[index] === PostData[this.state.questionNum].correct ? \"#00ff00\" : \"\" : this.state.chosenAnswer === this.answerLetters[index] ? \"pink\" : \"\",\n                        padding: \"15px\"\n                      },\n                      htmlFor: this.answerLetters[index],\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"optionText\",\n                        style: {\n                          textDecorationLine: this.state.isShowingAnswer && this.answerLetters[index] !== PostData[this.state.questionNum].correct ? \"line-through\" : \"none\",\n                          display: \"flex\",\n                          textDecorationThickness: \"1.5px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          style: {\n                            marginRight: \"12px\",\n                            flexShrink: \"0\"\n                          },\n                          onChange: this.setAnswer.bind(this),\n                          type: \"radio\",\n                          id: this.answerLetters[index],\n                          value: this.answerLetters[index],\n                          name: \"options\",\n                          checked: !this.state.isShowingAnswer && this.state.chosenAnswer === this.answerLetters[index]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 194,\n                          columnNumber: 33\n                        }, this), option]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 25\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"exitButton\",\n              onClick: e => this.exitQuiz(),\n              children: \"\\u2190 Exit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"revealAnswerButton\",\n              onClick: e => this.showSolution(),\n              children: \"Reveal Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"nextButton\",\n              onClick: e => this.nextQuestion(),\n              children: \"Next \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bian/Desktop/Summer/edu/src/App.js"],"names":["React","Component","PostData","App","constructor","answerLetters","exitQuiz","setState","questionNum","isEnd","isShowingAnswer","chosenAnswer","answersArray","statusArray","difficultyArray","score","reviewQuestions","nextQuestion","state","correct","length","isSpecificTopicChosen","topic","setAnswer","event","console","log","target","value","checkStatus","showSolution","render","Math","round","toFixed","map","answer","index","position","top","e","title","choices","option","backgroundColor","padding","textDecorationLine","display","textDecorationThickness","marginRight","flexShrink","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PostData from \"./data/astronomy.json\";\nimport \"./style.css\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0,\n      isSpecificTopicChosen: false,\n      topic: \"General Astronomy\",\n    };\n  }\n\n  answerLetters = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\n  exitQuiz = () => {\n    this.setState({\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0,\n    });\n  };\n\n  reviewQuestions = () => {\n    this.setState({\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0,\n    });\n  };\n\n  setAnswer(event) {\n    console.log(event.target.value);\n    this.setState({\n      chosenAnswer: event.target.value,\n      checkStatus: true,\n    });\n  }\n\n  showSolution() {\n    console.log(PostData[this.state.questionNum].correct);\n    this.setState({\n      isShowingAnswer: true,\n    });\n  }\n\n  nextQuestion = () => {\n    this.setState({\n      isShowingAnswer: false,\n    });\n    if (this.state.isShowingAnswer) {\n      this.setState({\n        statusArray: [...this.state.statusArray, \"✕\"],\n      });\n    } else {\n      if (\n        this.state.chosenAnswer === PostData[this.state.questionNum].correct\n      ) {\n        this.setState({\n          score: this.state.score + 1,\n          statusArray: [...this.state.statusArray, \"✓\"],\n        });\n      } else {\n        this.setState({\n          statusArray: [...this.state.statusArray, \"✕\"],\n        });\n      }\n    }\n    this.setState({\n      answersArray: [...this.state.answersArray, this.state.chosenAnswer],\n      chosenAnswer: \"\",\n    });\n\n    if (this.state.questionNum + 1 < PostData.length) {\n      this.setState({\n        questionNum: this.state.questionNum + 1,\n      });\n    } else {\n      this.setState({\n        isEnd: true,\n      });\n    }\n  };\n\n  render() {\n    if (!this.state.isSpecificTopicChosen) {\n      return (\n        <>\n          <p>Hello</p>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <center>\n            <h2>{this.state.topic}</h2>\n            {this.state.isEnd ? (\n              <>\n                <div className=\"questionBox\">\n                  <p>\n                    Score: {this.state.score} / {PostData.length}\n                  </p>\n                  <p>\n                    Percentage:{\" \"}\n                    {Math.round(\n                      ((this.state.score / PostData.length) * 100).toFixed(2)\n                    )}\n                    %\n                  </p>\n                  {this.state.statusArray.map((answer, index) => {\n                    return (\n                      <span>\n                        {index + 1}. {answer} &nbsp;&nbsp;\n                      </span>\n                    );\n                  })}\n                  <br />\n                  <br />\n                </div>\n                <span\n                  span\n                  id=\"buttonDesign\"\n                  style={{ position: \"relative\", top: \"40px\" }}\n                  onClick={(e) => this.reviewQuestions()}\n                >\n                  Take quiz again\n                </span>\n                <p></p>\n              </>\n            ) : (\n              <>\n                <div className=\"questionBox\">\n                  {/* {PostData.map((postDetail, index) => {\n                return <p>{postDetail.title}</p>;\n              })}  */}\n                  <p className=\"questionTitleInner\" id=\"questionTitle\">\n                    {this.state.questionNum + 1}.&nbsp;\n                    {PostData[this.state.questionNum].title}\n                  </p>\n                  <hr></hr>\n\n                  {PostData[this.state.questionNum].choices.map(\n                    (option, index) => {\n                      return (\n                        <div key={index}>\n                          <label>\n                            <div\n                              className=\"questionBoxInner\"\n                              style={{\n                                backgroundColor: this.state.isShowingAnswer\n                                  ? this.answerLetters[index] ===\n                                    PostData[this.state.questionNum].correct\n                                    ? \"#00ff00\"\n                                    : \"\"\n                                  : this.state.chosenAnswer ===\n                                    this.answerLetters[index]\n                                  ? \"pink\"\n                                  : \"\",\n                                padding: \"15px\",\n                              }}\n                              htmlFor={this.answerLetters[index]}\n                            >\n                              {/* {this.answerLetters[index]}. */}\n                              <label\n                                className=\"optionText\"\n                                style={{\n                                  textDecorationLine:\n                                    this.state.isShowingAnswer &&\n                                    this.answerLetters[index] !==\n                                      PostData[this.state.questionNum].correct\n                                      ? \"line-through\"\n                                      : \"none\",\n                                  display: \"flex\",\n                                  textDecorationThickness: \"1.5px\",\n                                }}\n                              >\n                                <input\n                                  style={{\n                                    marginRight: \"12px\",\n                                    flexShrink: \"0\",\n                                  }}\n                                  onChange={this.setAnswer.bind(this)}\n                                  type=\"radio\"\n                                  id={this.answerLetters[index]}\n                                  value={this.answerLetters[index]}\n                                  name=\"options\"\n                                  checked={\n                                    !this.state.isShowingAnswer &&\n                                    this.state.chosenAnswer ===\n                                      this.answerLetters[index]\n                                  }\n                                />\n                                {option}\n                              </label>\n                            </div>\n                          </label>\n                        </div>\n                      );\n                    }\n                  )}\n\n                  <p></p>\n                </div>\n                <span id=\"exitButton\" onClick={(e) => this.exitQuiz()}>\n                  ← Exit\n                </span>\n                &nbsp;&nbsp;\n                <span\n                  id=\"revealAnswerButton\"\n                  onClick={(e) => this.showSolution()}\n                >\n                  Reveal Answer\n                </span>\n                &nbsp;&nbsp;\n                <span id=\"nextButton\" onClick={(e) => this.nextQuestion()}>\n                  Next →\n                </span>\n              </>\n            )}\n          </center>\n          <br /> <br />\n          <br /> <br />\n        </>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}