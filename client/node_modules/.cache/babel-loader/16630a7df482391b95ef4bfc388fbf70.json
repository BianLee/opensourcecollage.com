{"ast":null,"code":"var _jsxFileName = \"/home/bian/Desktop/Summer/a/src/App.js\";\nimport { everyLimit } from \"async\";\nimport React, { Component } from \"react\";\nimport Astronomy from \"./data/astronomy.json\";\nimport Biology from \"./data/bio.json\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(); // PostData = Astronomy;\n\n    this.answerLetters = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\n    this.exitQuiz = () => {\n      this.setState({\n        questionNum: 0,\n        isEnd: false,\n        isShowingAnswer: false,\n        chosenAnswer: \"\",\n        answersArray: [],\n        statusArray: [],\n        difficultyArray: [],\n        score: 0,\n        isSpecificTopicChosen: false,\n        topic: \"\",\n        Data: \"\"\n      });\n    };\n\n    this.reviewQuestions = () => {\n      this.setState({\n        questionNum: 0,\n        isEnd: false,\n        isShowingAnswer: false,\n        chosenAnswer: \"\",\n        answersArray: [],\n        statusArray: [],\n        difficultyArray: [],\n        score: 0\n      });\n    };\n\n    this.nextQuestion = () => {\n      this.setState({\n        isShowingAnswer: false,\n        chosenAnswer: \"\"\n      });\n      this.setState({\n        answersArray: [...this.state.answersArray, this.state.chosenAnswer],\n        chosenAnswer: \"\"\n      });\n\n      if (this.state.questionNum + 1 < this.state.Data.length) {\n        this.setState({\n          questionNum: this.state.questionNum + 1\n        });\n      } else {\n        this.setState({\n          isEnd: true\n        });\n      }\n    };\n\n    this.state = {\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0,\n      isSpecificTopicChosen: false,\n      topic: \"\",\n      Data: \"\"\n    };\n  } //  PostData = Astronomy;\n\n\n  setAnswer(event) {\n    console.log(event.target.value);\n    this.setState({\n      chosenAnswer: event.target.value,\n      checkStatus: true\n    });\n  }\n\n  showSolution() {\n    console.log(this.state.Data[this.state.questionNum].correct);\n    this.setState({\n      isShowingAnswer: true\n    });\n\n    if (this.state.chosenAnswer === this.state.Data[this.state.questionNum].correct) {\n      this.setState({\n        score: this.state.score + 1,\n        statusArray: [...this.state.statusArray, \"✓\"]\n      });\n    } else {\n      this.setState({\n        statusArray: [...this.state.statusArray, \"✕\"]\n      });\n    }\n  }\n\n  chooseTopic(event) {\n    console.log(event.target.value);\n    this.setState({\n      isSpecificTopicChosen: true,\n      topic: event.target.value,\n      Data: event.target.value\n    });\n\n    if (event.target.value == \"Astronomy\") {\n      this.setState({\n        Data: Astronomy\n      });\n    } else if (event.target.value == \"Biology\") {\n      this.setState({\n        Data: Biology\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.isSpecificTopicChosen) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Lobster Institute of Technology (LIT)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboardTopics\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              value: \"Astronomy\",\n              className: \"subjectButton\",\n              onClick: this.chooseTopic.bind(this),\n              children: \"Astronomy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              value: \"Biology\",\n              className: \"subjectButton\",\n              onClick: this.chooseTopic.bind(this),\n              children: \"Biology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              value: \"Cryptography\",\n              className: \"subjectButton\",\n              onClick: this.chooseTopic.bind(this),\n              children: \"Cryptography\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              value: \"Economics\",\n              className: \"subjectButton\",\n              onClick: this.chooseTopic.bind(this),\n              children: \"Economics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              value: \"Linux\",\n              className: \"subjectButton\",\n              onClick: this.chooseTopic.bind(this),\n              children: \"Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              value: \"Linux\",\n              className: \"subjectButton\",\n              onClick: this.chooseTopic.bind(this),\n              children: \"Javascript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"questionTitleInner\",\n              id: \"questionTitle\",\n              style: {\n                fontSize: \"18px\",\n                lineHeight: \"2rem\"\n              },\n              children: [\"This platform aims to educate students on various subjects through problem solving. It features core academic disciplines, as well as topics students normally wouldn't encounter in typical class settings. With thorough explanations and detailed score report, students can recognize their strengths, and better understand areas on which they need to improve. If you wish to contribute, please visit\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://github.com/BianLee/edu\",\n                target: \"_blank\",\n                style: {\n                  textDecoration: \"none\",\n                  fontSize: \"1.1rem\"\n                },\n                children: \"GitHub\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), \"\\xA0page and refer to the README.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: this.state.topic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), this.state.isEnd ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"questionBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Score: \", this.state.score, \" / \", this.state.Data.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Percentage:\", \" \", Math.round((this.state.score / this.state.Data.length * 100).toFixed(2)), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), this.state.statusArray.map((answer, index) => {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [index + 1, \". \", answer, \" \\xA0\\xA0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              span: true,\n              id: \"buttonDesign\",\n              style: {\n                position: \"relative\",\n                top: \"40px\"\n              },\n              onClick: e => this.reviewQuestions(),\n              children: \"Take quiz again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"questionBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"questionTitleInner\",\n                id: \"questionTitle\",\n                children: [this.state.questionNum + 1, \".\\xA0\", this.state.Data[this.state.questionNum].title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), this.state.Data[this.state.questionNum].choices.map((option, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"questionBoxInner\",\n                      style: {\n                        backgroundColor: this.state.isShowingAnswer ? this.answerLetters[index] === this.state.Data[this.state.questionNum].correct ? \"#00ff00\" : \"\" : this.state.chosenAnswer === this.answerLetters[index] ? \"pink\" : \"\",\n                        padding: \"15px\"\n                      },\n                      htmlFor: this.answerLetters[index],\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"optionText\",\n                        style: {\n                          textDecorationLine: this.state.isShowingAnswer && this.answerLetters[index] !== this.state.Data[this.state.questionNum].correct ? \"line-through\" : \"none\",\n                          display: \"flex\",\n                          textDecorationThickness: \"1.5px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          style: {\n                            marginRight: \"12px\",\n                            flexShrink: \"0\"\n                          },\n                          onChange: this.setAnswer.bind(this),\n                          type: \"radio\",\n                          id: this.answerLetters[index],\n                          value: this.answerLetters[index],\n                          name: \"options\",\n                          checked: !this.state.isShowingAnswer && this.state.chosenAnswer === this.answerLetters[index]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 291,\n                          columnNumber: 33\n                        }, this), option]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 25\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), this.state.isShowingAnswer && this.state.Data[this.state.questionNum].solution.length != 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"instructions\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"questionTitleInner\",\n                  id: \"questionTitle\",\n                  style: {\n                    fontSize: \"1.05rem\",\n                    lineHeight: \"2rem\"\n                  },\n                  children: [\"\\u2022 \", this.state.Data[this.state.questionNum].solution]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"exitButton\",\n              onClick: e => this.exitQuiz(),\n              children: \"\\u2190 Exit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), \"\\xA0\\xA0 \\xA0\\xA0\", this.state.isShowingAnswer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"nextButton\",\n                onClick: e => this.nextQuestion(),\n                children: \"Next \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"nextButton\",\n                onClick: e => this.showSolution(),\n                children: \"Check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this)\n            }, void 0, false)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bian/Desktop/Summer/a/src/App.js"],"names":["everyLimit","React","Component","Astronomy","Biology","App","constructor","answerLetters","exitQuiz","setState","questionNum","isEnd","isShowingAnswer","chosenAnswer","answersArray","statusArray","difficultyArray","score","isSpecificTopicChosen","topic","Data","reviewQuestions","nextQuestion","state","length","setAnswer","event","console","log","target","value","checkStatus","showSolution","correct","chooseTopic","render","bind","fontSize","lineHeight","textDecoration","Math","round","toFixed","map","answer","index","position","top","e","title","choices","option","backgroundColor","padding","textDecorationLine","display","textDecorationThickness","marginRight","flexShrink","solution"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAO,aAAP;;;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;;AAFY,SAkBdC,aAlBc,GAkBE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAlBF;;AAAA,SAoBdC,QApBc,GAoBH,MAAM;AACf,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE,CADD;AAEZC,QAAAA,KAAK,EAAE,KAFK;AAGZC,QAAAA,eAAe,EAAE,KAHL;AAIZC,QAAAA,YAAY,EAAE,EAJF;AAKZC,QAAAA,YAAY,EAAE,EALF;AAMZC,QAAAA,WAAW,EAAE,EAND;AAOZC,QAAAA,eAAe,EAAE,EAPL;AAQZC,QAAAA,KAAK,EAAE,CARK;AASZC,QAAAA,qBAAqB,EAAE,KATX;AAUZC,QAAAA,KAAK,EAAE,EAVK;AAWZC,QAAAA,IAAI,EAAE;AAXM,OAAd;AAaD,KAlCa;;AAAA,SAoCdC,eApCc,GAoCI,MAAM;AACtB,WAAKZ,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE,CADD;AAEZC,QAAAA,KAAK,EAAE,KAFK;AAGZC,QAAAA,eAAe,EAAE,KAHL;AAIZC,QAAAA,YAAY,EAAE,EAJF;AAKZC,QAAAA,YAAY,EAAE,EALF;AAMZC,QAAAA,WAAW,EAAE,EAND;AAOZC,QAAAA,eAAe,EAAE,EAPL;AAQZC,QAAAA,KAAK,EAAE;AARK,OAAd;AAUD,KA/Ca;;AAAA,SA+FdK,YA/Fc,GA+FC,MAAM;AACnB,WAAKb,QAAL,CAAc;AACZG,QAAAA,eAAe,EAAE,KADL;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAd;AAKA,WAAKJ,QAAL,CAAc;AACZK,QAAAA,YAAY,EAAE,CAAC,GAAG,KAAKS,KAAL,CAAWT,YAAf,EAA6B,KAAKS,KAAL,CAAWV,YAAxC,CADF;AAEZA,QAAAA,YAAY,EAAE;AAFF,OAAd;;AAKA,UAAI,KAAKU,KAAL,CAAWb,WAAX,GAAyB,CAAzB,GAA6B,KAAKa,KAAL,CAAWH,IAAX,CAAgBI,MAAjD,EAAyD;AACvD,aAAKf,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAE,KAAKa,KAAL,CAAWb,WAAX,GAAyB;AAD1B,SAAd;AAGD,OAJD,MAIO;AACL,aAAKD,QAAL,CAAc;AACZE,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD;AACF,KAnHa;;AAGZ,SAAKY,KAAL,GAAa;AACXb,MAAAA,WAAW,EAAE,CADF;AAEXC,MAAAA,KAAK,EAAE,KAFI;AAGXC,MAAAA,eAAe,EAAE,KAHN;AAIXC,MAAAA,YAAY,EAAE,EAJH;AAKXC,MAAAA,YAAY,EAAE,EALH;AAMXC,MAAAA,WAAW,EAAE,EANF;AAOXC,MAAAA,eAAe,EAAE,EAPN;AAQXC,MAAAA,KAAK,EAAE,CARI;AASXC,MAAAA,qBAAqB,EAAE,KATZ;AAUXC,MAAAA,KAAK,EAAE,EAVI;AAWXC,MAAAA,IAAI,EAAE;AAXK,KAAb;AAaD,GAjByB,CAkB1B;;;AAgCAK,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACA,SAAKrB,QAAL,CAAc;AACZI,MAAAA,YAAY,EAAEa,KAAK,CAACG,MAAN,CAAaC,KADf;AAEZC,MAAAA,WAAW,EAAE;AAFD,KAAd;AAID;;AAEDC,EAAAA,YAAY,GAAG;AACbL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWH,IAAX,CAAgB,KAAKG,KAAL,CAAWb,WAA3B,EAAwCuB,OAApD;AACA,SAAKxB,QAAL,CAAc;AACZG,MAAAA,eAAe,EAAE;AADL,KAAd;;AAGA,QACE,KAAKW,KAAL,CAAWV,YAAX,KACA,KAAKU,KAAL,CAAWH,IAAX,CAAgB,KAAKG,KAAL,CAAWb,WAA3B,EAAwCuB,OAF1C,EAGE;AACA,WAAKxB,QAAL,CAAc;AACZQ,QAAAA,KAAK,EAAE,KAAKM,KAAL,CAAWN,KAAX,GAAmB,CADd;AAEZF,QAAAA,WAAW,EAAE,CAAC,GAAG,KAAKQ,KAAL,CAAWR,WAAf,EAA4B,GAA5B;AAFD,OAAd;AAID,KARD,MAQO;AACL,WAAKN,QAAL,CAAc;AACZM,QAAAA,WAAW,EAAE,CAAC,GAAG,KAAKQ,KAAL,CAAWR,WAAf,EAA4B,GAA5B;AADD,OAAd;AAGD;AACF;;AAEDmB,EAAAA,WAAW,CAACR,KAAD,EAAQ;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACA,SAAKrB,QAAL,CAAc;AACZS,MAAAA,qBAAqB,EAAE,IADX;AAEZC,MAAAA,KAAK,EAAEO,KAAK,CAACG,MAAN,CAAaC,KAFR;AAGZV,MAAAA,IAAI,EAAEM,KAAK,CAACG,MAAN,CAAaC;AAHP,KAAd;;AAKA,QAAIJ,KAAK,CAACG,MAAN,CAAaC,KAAb,IAAsB,WAA1B,EAAuC;AACrC,WAAKrB,QAAL,CAAc;AACZW,QAAAA,IAAI,EAAEjB;AADM,OAAd;AAGD,KAJD,MAIO,IAAIuB,KAAK,CAACG,MAAN,CAAaC,KAAb,IAAsB,SAA1B,EAAqC;AAC1C,WAAKrB,QAAL,CAAc;AACZW,QAAAA,IAAI,EAAEhB;AADM,OAAd;AAGD;AACF;;AAuBD+B,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKZ,KAAL,CAAWL,qBAAhB,EAAuC;AACrC,0BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACE;AACE,cAAA,KAAK,EAAC,WADR;AAEE,cAAA,SAAS,EAAC,eAFZ;AAGE,cAAA,OAAO,EAAE,KAAKgB,WAAL,CAAiBE,IAAjB,CAAsB,IAAtB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AACE,cAAA,KAAK,EAAC,SADR;AAEE,cAAA,SAAS,EAAC,eAFZ;AAGE,cAAA,OAAO,EAAE,KAAKF,WAAL,CAAiBE,IAAjB,CAAsB,IAAtB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eAeE;AACE,cAAA,KAAK,EAAC,cADR;AAEE,cAAA,SAAS,EAAC,eAFZ;AAGE,cAAA,OAAO,EAAE,KAAKF,WAAL,CAAiBE,IAAjB,CAAsB,IAAtB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF,eAsBE;AACE,cAAA,KAAK,EAAC,WADR;AAEE,cAAA,SAAS,EAAC,eAFZ;AAGE,cAAA,OAAO,EAAE,KAAKF,WAAL,CAAiBE,IAAjB,CAAsB,IAAtB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBF,eA6BE;AACE,cAAA,KAAK,EAAC,OADR;AAEE,cAAA,SAAS,EAAC,eAFZ;AAGE,cAAA,OAAO,EAAE,KAAKF,WAAL,CAAiBE,IAAjB,CAAsB,IAAtB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7BF,eAoCE;AACE,cAAA,KAAK,EAAC,OADR;AAEE,cAAA,SAAS,EAAC,eAFZ;AAGE,cAAA,OAAO,EAAE,KAAKF,WAAL,CAAiBE,IAAjB,CAAsB,IAAtB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eA+CE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,oBADZ;AAEE,cAAA,EAAE,EAAC,eAFL;AAGE,cAAA,KAAK,EAAE;AAAEC,gBAAAA,QAAQ,EAAE,MAAZ;AAAoBC,gBAAAA,UAAU,EAAE;AAAhC,eAHT;AAAA,0aAW2B,GAX3B,eAYE;AACE,gBAAA,IAAI,EAAC,gCADP;AAEE,gBAAA,MAAM,EAAC,QAFT;AAGE,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,cAAc,EAAE,MAAlB;AAA0BF,kBAAAA,QAAQ,EAAE;AAApC,iBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,oDAoBE;AAAA;AAAA;AAAA;AAAA,sBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA/CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AA4ED,KA7ED,MA6EO;AACL,0BACE;AAAA,+BACE;AAAA,kCACE;AAAA,sBAAK,KAAKd,KAAL,CAAWJ;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,KAAKI,KAAL,CAAWZ,KAAX,gBACC;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACE;AAAA,sCACU,KAAKY,KAAL,CAAWN,KADrB,SAC+B,KAAKM,KAAL,CAAWH,IAAX,CAAgBI,MAD/C;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAA,0CACc,GADd,EAEGgB,IAAI,CAACC,KAAL,CACC,CACG,KAAKlB,KAAL,CAAWN,KAAX,GAAmB,KAAKM,KAAL,CAAWH,IAAX,CAAgBI,MAApC,GACA,GAFF,EAGEkB,OAHF,CAGU,CAHV,CADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAcG,KAAKnB,KAAL,CAAWR,WAAX,CAAuB4B,GAAvB,CAA2B,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC7C,oCACE;AAAA,6BACGA,KAAK,GAAG,CADX,QACgBD,MADhB;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAKD,eANA,CAdH,eAqBE;AAAA;AAAA;AAAA;AAAA,sBArBF,eAsBE;AAAA;AAAA;AAAA;AAAA,sBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAyBE;AACE,cAAA,IAAI,MADN;AAEE,cAAA,EAAE,EAAC,cAFL;AAGE,cAAA,KAAK,EAAE;AAAEE,gBAAAA,QAAQ,EAAE,UAAZ;AAAwBC,gBAAAA,GAAG,EAAE;AAA7B,eAHT;AAIE,cAAA,OAAO,EAAGC,CAAD,IAAO,KAAK3B,eAAL,EAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF,eAiCE;AAAA;AAAA;AAAA;AAAA,oBAjCF;AAAA,0BADD,gBAqCC;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCAIE;AAAG,gBAAA,SAAS,EAAC,oBAAb;AAAkC,gBAAA,EAAE,EAAC,eAArC;AAAA,2BACG,KAAKE,KAAL,CAAWb,WAAX,GAAyB,CAD5B,WAEG,KAAKa,KAAL,CAAWH,IAAX,CAAgB,KAAKG,KAAL,CAAWb,WAA3B,EAAwCuC,KAF3C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAQE;AAAA;AAAA;AAAA;AAAA,sBARF,EAUG,KAAK1B,KAAL,CAAWH,IAAX,CAAgB,KAAKG,KAAL,CAAWb,WAA3B,EAAwCwC,OAAxC,CAAgDP,GAAhD,CACC,CAACQ,MAAD,EAASN,KAAT,KAAmB;AACjB,oCACE;AAAA,yCACE;AAAA,2CACE;AACE,sBAAA,SAAS,EAAC,kBADZ;AAEE,sBAAA,KAAK,EAAE;AACLO,wBAAAA,eAAe,EAAE,KAAK7B,KAAL,CAAWX,eAAX,GACb,KAAKL,aAAL,CAAmBsC,KAAnB,MACA,KAAKtB,KAAL,CAAWH,IAAX,CAAgB,KAAKG,KAAL,CAAWb,WAA3B,EACGuB,OAFH,GAGE,SAHF,GAIE,EALW,GAMb,KAAKV,KAAL,CAAWV,YAAX,KACA,KAAKN,aAAL,CAAmBsC,KAAnB,CADA,GAEA,MAFA,GAGA,EAVC;AAWLQ,wBAAAA,OAAO,EAAE;AAXJ,uBAFT;AAeE,sBAAA,OAAO,EAAE,KAAK9C,aAAL,CAAmBsC,KAAnB,CAfX;AAAA,6CAkBE;AACE,wBAAA,SAAS,EAAC,YADZ;AAEE,wBAAA,KAAK,EAAE;AACLS,0BAAAA,kBAAkB,EAChB,KAAK/B,KAAL,CAAWX,eAAX,IACA,KAAKL,aAAL,CAAmBsC,KAAnB,MACE,KAAKtB,KAAL,CAAWH,IAAX,CAAgB,KAAKG,KAAL,CAAWb,WAA3B,EACGuB,OAHL,GAII,cAJJ,GAKI,MAPD;AAQLsB,0BAAAA,OAAO,EAAE,MARJ;AASLC,0BAAAA,uBAAuB,EAAE;AATpB,yBAFT;AAAA,gDAcE;AACE,0BAAA,KAAK,EAAE;AACLC,4BAAAA,WAAW,EAAE,MADR;AAELC,4BAAAA,UAAU,EAAE;AAFP,2BADT;AAKE,0BAAA,QAAQ,EAAE,KAAKjC,SAAL,CAAeW,IAAf,CAAoB,IAApB,CALZ;AAME,0BAAA,IAAI,EAAC,OANP;AAOE,0BAAA,EAAE,EAAE,KAAK7B,aAAL,CAAmBsC,KAAnB,CAPN;AAQE,0BAAA,KAAK,EAAE,KAAKtC,aAAL,CAAmBsC,KAAnB,CART;AASE,0BAAA,IAAI,EAAC,SATP;AAUE,0BAAA,OAAO,EACL,CAAC,KAAKtB,KAAL,CAAWX,eAAZ,IACA,KAAKW,KAAL,CAAWV,YAAX,KACE,KAAKN,aAAL,CAAmBsC,KAAnB;AAbN;AAAA;AAAA;AAAA;AAAA,gCAdF,EA8BGM,MA9BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBAAUN,KAAV;AAAA;AAAA;AAAA;AAAA,wBADF;AAyDD,eA3DF,CAVH,eAwEE;AAAA;AAAA;AAAA;AAAA,sBAxEF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EA2EG,KAAKtB,KAAL,CAAWX,eAAX,IACD,KAAKW,KAAL,CAAWH,IAAX,CAAgB,KAAKG,KAAL,CAAWb,WAA3B,EAAwCiD,QAAxC,CAAiDnC,MAAjD,IAA2D,CAD1D,gBAEC;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,uCACE;AACE,kBAAA,SAAS,EAAC,oBADZ;AAEE,kBAAA,EAAE,EAAC,eAFL;AAGE,kBAAA,KAAK,EAAE;AAAEa,oBAAAA,QAAQ,EAAE,SAAZ;AAAuBC,oBAAAA,UAAU,EAAE;AAAnC,mBAHT;AAAA,wCAqBK,KAAKf,KAAL,CAAWH,IAAX,CAAgB,KAAKG,KAAL,CAAWb,WAA3B,EAAwCiD,QArB7C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,6BAFD,gBA8BC,qCAzGJ,eA2GE;AAAM,cAAA,EAAE,EAAC,YAAT;AAAsB,cAAA,OAAO,EAAGX,CAAD,IAAO,KAAKxC,QAAL,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3GF,uBA+GG,KAAKe,KAAL,CAAWX,eAAX,gBACC;AAAA,qCACE;AAAM,gBAAA,EAAE,EAAC,YAAT;AAAsB,gBAAA,OAAO,EAAGoC,CAAD,IAAO,KAAK1B,YAAL,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,6BADD,gBAOC;AAAA,qCACE;AAAM,gBAAA,EAAE,EAAC,YAAT;AAAsB,gBAAA,OAAO,EAAG0B,CAAD,IAAO,KAAKhB,YAAL,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,6BAtHJ;AAAA,0BAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AA0KD;AACF;;AA/WyB;;AAkX5B,eAAe3B,GAAf","sourcesContent":["import { everyLimit } from \"async\";\nimport React, { Component } from \"react\";\nimport Astronomy from \"./data/astronomy.json\";\nimport Biology from \"./data/bio.json\";\nimport \"./style.css\";\nclass App extends Component {\n  constructor() {\n    super();\n    // PostData = Astronomy;\n    this.state = {\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0,\n      isSpecificTopicChosen: false,\n      topic: \"\",\n      Data: \"\",\n    };\n  }\n  //  PostData = Astronomy;\n  answerLetters = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\n  exitQuiz = () => {\n    this.setState({\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0,\n      isSpecificTopicChosen: false,\n      topic: \"\",\n      Data: \"\",\n    });\n  };\n\n  reviewQuestions = () => {\n    this.setState({\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0,\n    });\n  };\n\n  setAnswer(event) {\n    console.log(event.target.value);\n    this.setState({\n      chosenAnswer: event.target.value,\n      checkStatus: true,\n    });\n  }\n\n  showSolution() {\n    console.log(this.state.Data[this.state.questionNum].correct);\n    this.setState({\n      isShowingAnswer: true,\n    });\n    if (\n      this.state.chosenAnswer ===\n      this.state.Data[this.state.questionNum].correct\n    ) {\n      this.setState({\n        score: this.state.score + 1,\n        statusArray: [...this.state.statusArray, \"✓\"],\n      });\n    } else {\n      this.setState({\n        statusArray: [...this.state.statusArray, \"✕\"],\n      });\n    }\n  }\n\n  chooseTopic(event) {\n    console.log(event.target.value);\n    this.setState({\n      isSpecificTopicChosen: true,\n      topic: event.target.value,\n      Data: event.target.value,\n    });\n    if (event.target.value == \"Astronomy\") {\n      this.setState({\n        Data: Astronomy,\n      });\n    } else if (event.target.value == \"Biology\") {\n      this.setState({\n        Data: Biology,\n      });\n    }\n  }\n\n  nextQuestion = () => {\n    this.setState({\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n    });\n\n    this.setState({\n      answersArray: [...this.state.answersArray, this.state.chosenAnswer],\n      chosenAnswer: \"\",\n    });\n\n    if (this.state.questionNum + 1 < this.state.Data.length) {\n      this.setState({\n        questionNum: this.state.questionNum + 1,\n      });\n    } else {\n      this.setState({\n        isEnd: true,\n      });\n    }\n  };\n  render() {\n    if (!this.state.isSpecificTopicChosen) {\n      return (\n        <>\n          <center>\n            <h3>Lobster Institute of Technology (LIT)</h3>\n            <div className=\"dashboardTopics\">\n              <button\n                value=\"Astronomy\"\n                className=\"subjectButton\"\n                onClick={this.chooseTopic.bind(this)}\n              >\n                Astronomy\n              </button>\n              <button\n                value=\"Biology\"\n                className=\"subjectButton\"\n                onClick={this.chooseTopic.bind(this)}\n              >\n                Biology\n              </button>\n              <button\n                value=\"Cryptography\"\n                className=\"subjectButton\"\n                onClick={this.chooseTopic.bind(this)}\n              >\n                Cryptography\n              </button>\n              <button\n                value=\"Economics\"\n                className=\"subjectButton\"\n                onClick={this.chooseTopic.bind(this)}\n              >\n                Economics\n              </button>\n              <button\n                value=\"Linux\"\n                className=\"subjectButton\"\n                onClick={this.chooseTopic.bind(this)}\n              >\n                Java\n              </button>\n              <button\n                value=\"Linux\"\n                className=\"subjectButton\"\n                onClick={this.chooseTopic.bind(this)}\n              >\n                Javascript\n              </button>\n            </div>\n\n            <div className=\"dashboard\">\n              <p\n                className=\"questionTitleInner\"\n                id=\"questionTitle\"\n                style={{ fontSize: \"18px\", lineHeight: \"2rem\" }}\n              >\n                This platform aims to educate students on various subjects\n                through problem solving. It features core academic disciplines,\n                as well as topics students normally wouldn't encounter in\n                typical class settings. With thorough explanations and detailed\n                score report, students can recognize their strengths, and better\n                understand areas on which they need to improve. If you wish to\n                contribute, please visit{\" \"}\n                <a\n                  href=\"https://github.com/BianLee/edu\"\n                  target=\"_blank\"\n                  style={{ textDecoration: \"none\", fontSize: \"1.1rem\" }}\n                >\n                  GitHub\n                </a>\n                &nbsp;page and refer to the README.\n                <br />\n              </p>\n            </div>\n          </center>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <center>\n            <h2>{this.state.topic}</h2>\n            {this.state.isEnd ? (\n              <>\n                <div className=\"questionBox\">\n                  <p>\n                    Score: {this.state.score} / {this.state.Data.length}\n                  </p>\n                  <p>\n                    Percentage:{\" \"}\n                    {Math.round(\n                      (\n                        (this.state.score / this.state.Data.length) *\n                        100\n                      ).toFixed(2)\n                    )}\n                    %\n                  </p>\n                  {this.state.statusArray.map((answer, index) => {\n                    return (\n                      <span>\n                        {index + 1}. {answer} &nbsp;&nbsp;\n                      </span>\n                    );\n                  })}\n                  <br />\n                  <br />\n                </div>\n                <span\n                  span\n                  id=\"buttonDesign\"\n                  style={{ position: \"relative\", top: \"40px\" }}\n                  onClick={(e) => this.reviewQuestions()}\n                >\n                  Take quiz again\n                </span>\n                <p></p>\n              </>\n            ) : (\n              <>\n                <div className=\"questionBox\">\n                  {/* {PostData.map((postDetail, index) => {\n                return <p>{postDetail.title}</p>;\n              })}  */}\n                  <p className=\"questionTitleInner\" id=\"questionTitle\">\n                    {this.state.questionNum + 1}.&nbsp;\n                    {this.state.Data[this.state.questionNum].title}\n                  </p>\n                  <hr></hr>\n\n                  {this.state.Data[this.state.questionNum].choices.map(\n                    (option, index) => {\n                      return (\n                        <div key={index}>\n                          <label>\n                            <div\n                              className=\"questionBoxInner\"\n                              style={{\n                                backgroundColor: this.state.isShowingAnswer\n                                  ? this.answerLetters[index] ===\n                                    this.state.Data[this.state.questionNum]\n                                      .correct\n                                    ? \"#00ff00\"\n                                    : \"\"\n                                  : this.state.chosenAnswer ===\n                                    this.answerLetters[index]\n                                  ? \"pink\"\n                                  : \"\",\n                                padding: \"15px\",\n                              }}\n                              htmlFor={this.answerLetters[index]}\n                            >\n                              {/* {this.answerLetters[index]}. */}\n                              <label\n                                className=\"optionText\"\n                                style={{\n                                  textDecorationLine:\n                                    this.state.isShowingAnswer &&\n                                    this.answerLetters[index] !==\n                                      this.state.Data[this.state.questionNum]\n                                        .correct\n                                      ? \"line-through\"\n                                      : \"none\",\n                                  display: \"flex\",\n                                  textDecorationThickness: \"1.5px\",\n                                }}\n                              >\n                                <input\n                                  style={{\n                                    marginRight: \"12px\",\n                                    flexShrink: \"0\",\n                                  }}\n                                  onChange={this.setAnswer.bind(this)}\n                                  type=\"radio\"\n                                  id={this.answerLetters[index]}\n                                  value={this.answerLetters[index]}\n                                  name=\"options\"\n                                  checked={\n                                    !this.state.isShowingAnswer &&\n                                    this.state.chosenAnswer ===\n                                      this.answerLetters[index]\n                                  }\n                                />\n                                {option}\n                              </label>\n                            </div>\n                          </label>\n                        </div>\n                      );\n                    }\n                  )}\n\n                  <p></p>\n                </div>\n                {this.state.isShowingAnswer &&\n                this.state.Data[this.state.questionNum].solution.length != 0 ? (\n                  <>\n                    <div className=\"instructions\">\n                      <p\n                        className=\"questionTitleInner\"\n                        id=\"questionTitle\"\n                        style={{ fontSize: \"1.05rem\", lineHeight: \"2rem\" }}\n                      >\n                        {/* • Difficulty:{\" \"}\n                        {this.state.Data[this.state.questionNum].difficulty}\n                        <br />• Topics:&nbsp;\n                        {this.state.Data[this.state.questionNum].category.map(\n                          (cat, index) => {\n                            return (\n                              <span\n                                style={{ fontSize: \"18px\", lineHeight: \"2rem\" }}\n                              >\n                                {index ? \", \" : \"\"}\n                                {cat}\n                              </span>\n                            );\n                          }\n                        )}\n                        <br />➞ Explanation:{\" \"} */}\n                        • {this.state.Data[this.state.questionNum].solution}\n                      </p>\n                    </div>\n                  </>\n                ) : (\n                  <></>\n                )}\n                <span id=\"exitButton\" onClick={(e) => this.exitQuiz()}>\n                  ← Exit\n                </span>\n                &nbsp;&nbsp; &nbsp;&nbsp;\n                {this.state.isShowingAnswer ? (\n                  <>\n                    <span id=\"nextButton\" onClick={(e) => this.nextQuestion()}>\n                      Next →\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <span id=\"nextButton\" onClick={(e) => this.showSolution()}>\n                      Check\n                    </span>\n                  </>\n                )}\n              </>\n            )}\n          </center>\n        </>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}