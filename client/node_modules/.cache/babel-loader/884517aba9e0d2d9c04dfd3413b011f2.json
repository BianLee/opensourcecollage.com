{"ast":null,"code":"var _jsxFileName = \"/home/bian/Desktop/Summer/edu/src/App.js\";\nimport React, { Component } from \"react\";\nimport PostData from \"./data/astronomy.json\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.answerLetters = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\n    this.nextQuestion = () => {\n      this.setState({\n        isShowingAnswer: false\n      });\n\n      if (this.state.chosenAnswer === PostData[this.state.questionNum].correct) {\n        this.setState({\n          score: this.state.score + 1,\n          statusArray: [...this.state.statusArray, \"Correct\"]\n        });\n      } else {\n        this.setState({\n          statusArray: [...this.state.statusArray, \"Incorrect\"]\n        });\n      }\n\n      this.setState({\n        answersArray: [...this.state.answersArray, this.state.chosenAnswer],\n        chosenAnswer: \"\"\n      });\n\n      if (this.state.questionNum + 1 < PostData.length) {\n        this.setState({\n          questionNum: this.state.questionNum + 1\n        });\n      } else {\n        this.setState({\n          isEnd: true\n        });\n      }\n    };\n\n    this.state = {\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0\n    };\n  }\n\n  setAnswer(event) {\n    console.log(event.target.value);\n    this.setState({\n      chosenAnswer: event.target.value,\n      checkStatus: true\n    });\n  }\n\n  showSolution() {\n    console.log(PostData[this.state.questionNum].correct);\n    this.setState({\n      isShowingAnswer: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"General Astronomy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), this.state.isEnd ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questionBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Score: \", this.state.score, \" / \", PostData.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Percentage:\", \" \", Math.round((this.state.score / PostData.length * 100).toFixed(2)), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), this.state.statusArray.map((answer, index) => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [index + 1, \". \", answer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questionBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"questionTitleInner\",\n              id: \"questionTitle\",\n              children: [this.state.questionNum + 1, \".\\xA0\", PostData[this.state.questionNum].title, \"\\xA0(\", PostData[this.state.questionNum].difficulty, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), PostData[this.state.questionNum].choices.map((option, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"questionBoxInner\",\n                    style: {\n                      backgroundColor: this.state.chosenAnswer === this.answerLetters[index] ? {\n                        highlightedColor\n                      } : \"\",\n                      padding: \"15px\"\n                    },\n                    htmlFor: this.answerLetters[index],\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"optionText\",\n                      style: {\n                        textDecorationLine: this.state.isShowingAnswer && this.answerLetters[index] !== PostData[this.state.questionNum].correct ? \"line-through\" : \"none\",\n                        display: \"flex\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: {\n                          marginRight: \"12px\",\n                          flexShrink: \"0\"\n                        },\n                        onChange: this.setAnswer.bind(this),\n                        type: \"radio\",\n                        id: this.answerLetters[index],\n                        value: this.answerLetters[index],\n                        name: \"options\",\n                        checked: this.state.chosenAnswer === this.answerLetters[index]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 137,\n                        columnNumber: 31\n                      }, this), option]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"buttonDesign\",\n            style: {\n              position: \"relative\",\n              top: \"40px\"\n            },\n            onClick: e => this.showSolution(),\n            children: \"Reveal Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"buttonDesign\",\n            style: {\n              position: \"relative\",\n              top: \"40px\"\n            },\n            onClick: e => this.nextQuestion(),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bian/Desktop/Summer/edu/src/App.js"],"names":["React","Component","PostData","App","constructor","answerLetters","nextQuestion","setState","isShowingAnswer","state","chosenAnswer","questionNum","correct","score","statusArray","answersArray","length","isEnd","difficultyArray","setAnswer","event","console","log","target","value","checkStatus","showSolution","render","Math","round","toFixed","map","answer","index","title","difficulty","choices","option","backgroundColor","highlightedColor","padding","textDecorationLine","display","marginRight","flexShrink","bind","position","top","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PostData from \"./data/astronomy.json\";\nimport \"./style.css\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0,\n    };\n  }\n\n  answerLetters = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\n  setAnswer(event) {\n    console.log(event.target.value);\n    this.setState({\n      chosenAnswer: event.target.value,\n      checkStatus: true,\n    });\n  }\n\n  showSolution() {\n    console.log(PostData[this.state.questionNum].correct);\n    this.setState({\n      isShowingAnswer: true,\n    });\n  }\n\n  nextQuestion = () => {\n    this.setState({\n      isShowingAnswer: false,\n    });\n    if (this.state.chosenAnswer === PostData[this.state.questionNum].correct) {\n      this.setState({\n        score: this.state.score + 1,\n        statusArray: [...this.state.statusArray, \"Correct\"],\n      });\n    } else {\n      this.setState({\n        statusArray: [...this.state.statusArray, \"Incorrect\"],\n      });\n    }\n    this.setState({\n      answersArray: [...this.state.answersArray, this.state.chosenAnswer],\n      chosenAnswer: \"\",\n    });\n\n    if (this.state.questionNum + 1 < PostData.length) {\n      this.setState({\n        questionNum: this.state.questionNum + 1,\n      });\n    } else {\n      this.setState({\n        isEnd: true,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <center>\n          <h1>General Astronomy</h1>\n          {this.state.isEnd ? (\n            <>\n              <div className=\"questionBox\">\n                <p>\n                  Score: {this.state.score} / {PostData.length}\n                </p>\n                <p>\n                  Percentage:{\" \"}\n                  {Math.round(\n                    ((this.state.score / PostData.length) * 100).toFixed(2)\n                  )}\n                  %\n                </p>\n                {this.state.statusArray.map((answer, index) => {\n                  return (\n                    <p>\n                      {index + 1}. {answer}\n                    </p>\n                  );\n                })}\n              </div>\n              <p></p>\n            </>\n          ) : (\n            <>\n              <div className=\"questionBox\">\n                {/* {PostData.map((postDetail, index) => {\n              return <p>{postDetail.title}</p>;\n            })}  */}\n                <p className=\"questionTitleInner\" id=\"questionTitle\">\n                  {this.state.questionNum + 1}.&nbsp;\n                  {PostData[this.state.questionNum].title}&nbsp;(\n                  {PostData[this.state.questionNum].difficulty})\n                </p>\n                <hr></hr>\n\n                {PostData[this.state.questionNum].choices.map(\n                  (option, index) => {\n                    return (\n                      <div key={index}>\n                        <label>\n                          <div\n                            className=\"questionBoxInner\"\n                            style={{\n                              backgroundColor:\n                                this.state.chosenAnswer ===\n                                this.answerLetters[index]\n                                  ? { highlightedColor }\n                                  : \"\",\n                              padding: \"15px\",\n                            }}\n                            htmlFor={this.answerLetters[index]}\n                          >\n                            {/* {this.answerLetters[index]}. */}\n                            <label\n                              className=\"optionText\"\n                              style={{\n                                textDecorationLine:\n                                  this.state.isShowingAnswer &&\n                                  this.answerLetters[index] !==\n                                    PostData[this.state.questionNum].correct\n                                    ? \"line-through\"\n                                    : \"none\",\n                                display: \"flex\",\n                              }}\n                            >\n                              <input\n                                style={{\n                                  marginRight: \"12px\",\n                                  flexShrink: \"0\",\n                                }}\n                                onChange={this.setAnswer.bind(this)}\n                                type=\"radio\"\n                                id={this.answerLetters[index]}\n                                value={this.answerLetters[index]}\n                                name=\"options\"\n                                checked={\n                                  this.state.chosenAnswer ===\n                                  this.answerLetters[index]\n                                }\n                              />\n                              {option}\n                            </label>\n                          </div>\n                        </label>\n                      </div>\n                    );\n                  }\n                )}\n\n                <p></p>\n              </div>\n              <span\n                id=\"buttonDesign\"\n                style={{ position: \"relative\", top: \"40px\" }}\n                onClick={(e) => this.showSolution()}\n              >\n                Reveal Answer\n              </span>\n              &nbsp;&nbsp;\n              <span\n                id=\"buttonDesign\"\n                style={{ position: \"relative\", top: \"40px\" }}\n                onClick={(e) => this.nextQuestion()}\n              >\n                Next\n              </span>\n            </>\n          )}\n        </center>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}