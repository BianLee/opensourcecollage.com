{"ast":null,"code":"var _jsxFileName = \"/home/bian/Desktop/Summer/a/src/Blog.js\";\nimport React from \"react\";\nimport \"./style.css\";\nimport one from \"./blog/one.md\";\nimport ReactMarkdown from \"react-markdown\";\nimport Markdown from \"markdown-to-jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst markdown = `A paragraph with *emphasis* and **strong importance**.`;\nexport default class Blog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      terms: \"\",\n      page: 0\n    };\n  }\n\n  componentWillMount() {\n    var int = JSON.stringify(window.location.href).slice(-2, -1);\n    console.log(int);\n    fetch(one).then(response => response.text()).then(text => {\n      console.log(text);\n      this.setState({\n        terms: text,\n        page: int\n      });\n    });\n  }\n\n  render() {\n    const file_name = \"react_pinterest_clone.md\";\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard\",\n          children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: this.state.terms\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/bian/Desktop/Summer/a/src/Blog.js"],"names":["React","one","ReactMarkdown","Markdown","markdown","Blog","Component","constructor","props","state","terms","page","componentWillMount","int","JSON","stringify","window","location","href","slice","console","log","fetch","then","response","text","setState","render","file_name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,QAAP,MAAqB,iBAArB;;;AAEA,MAAMC,QAAQ,GAAI,wDAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,QAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAeC,MAAM,CAACC,QAAP,CAAgBC,IAA/B,EAAqCC,KAArC,CAA2C,CAAC,CAA5C,EAA+C,CAAC,CAAhD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAS,IAAAA,KAAK,CAACrB,GAAD,CAAL,CACGsB,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,WAAKC,QAAL,CAAc;AAAEhB,QAAAA,KAAK,EAAEe,IAAT;AAAed,QAAAA,IAAI,EAAEE;AAArB,OAAd;AACD,KALH;AAMD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,0BAAlB;AAEA,wBACE;AAAA,iBACG,GADH,eAEE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE,QAAC,aAAD;AAAA,sBAAgB,KAAKnB,KAAL,CAAWC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAM,KAAKD,KAAL,CAAWE;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAWD;;AAlC+C","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport one from \"./blog/one.md\";\nimport ReactMarkdown from \"react-markdown\";\nimport Markdown from \"markdown-to-jsx\";\n\nconst markdown = `A paragraph with *emphasis* and **strong importance**.`;\n\nexport default class Blog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      terms: \"\",\n      page: 0,\n    };\n  }\n\n  componentWillMount() {\n    var int = JSON.stringify(window.location.href).slice(-2, -1);\n    console.log(int);\n    fetch(one)\n      .then((response) => response.text())\n      .then((text) => {\n        console.log(text);\n        this.setState({ terms: text, page: int });\n      });\n  }\n\n  render() {\n    const file_name = \"react_pinterest_clone.md\";\n\n    return (\n      <>\n        {\" \"}\n        <center>\n          <div className=\"dashboard\">\n            <ReactMarkdown>{this.state.terms}</ReactMarkdown>\n            <div>{this.state.page}</div>\n          </div>\n        </center>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}