{"ast":null,"code":"import React from \"react\";\nimport \"./style.css\";\nimport one from \"./blog/one.md\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Blog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      terms: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentWillMount() {\n    fetch(one).then(response => response.text()).then(text => {\n      console.log(text);\n      this.setState({\n        terms: text\n      });\n    });\n  }\n\n  handleClick() {\n    console.log(this.state.terms);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/home/bian/Desktop/Summer/a/src/Blog.js"],"names":["React","one","ReactMarkdown","Blog","Component","constructor","props","state","terms","handleClick","bind","componentWillMount","fetch","then","response","text","console","log","setState","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;;AAEA,eAAe,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,KAAK,CAACX,GAAD,CAAL,CACGY,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAAEO;AAAT,OAAd;AACD,KALH;AAMD;;AAEDN,EAAAA,WAAW,GAAG;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,KAAvB;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBAAO,qCAAP;AACD;;AAtB+C","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport one from \"./blog/one.md\";\nimport ReactMarkdown from \"react-markdown\";\n\nexport default class Blog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { terms: \"\" };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentWillMount() {\n    fetch(one)\n      .then((response) => response.text())\n      .then((text) => {\n        console.log(text);\n        this.setState({ terms: text });\n      });\n  }\n\n  handleClick() {\n    console.log(this.state.terms);\n  }\n\n  render() {\n    return <></>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}