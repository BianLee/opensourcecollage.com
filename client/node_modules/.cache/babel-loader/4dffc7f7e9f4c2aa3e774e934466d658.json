{"ast":null,"code":"'use strict';\n\nvar start = factory('start');\nvar end = factory('end');\nmodule.exports = position;\nposition.start = start;\nposition.end = end;\n\nfunction position(node) {\n  return {\n    start: start(node),\n    end: end(node)\n  };\n}\n\nfunction factory(type) {\n  point.displayName = type;\n  return point;\n\n  function point(node) {\n    var point = node && node.position && node.position[type] || {};\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: isNaN(point.offset) ? null : point.offset\n    };\n  }\n}","map":{"version":3,"sources":["/Users/bian/Desktop/CS/a/client/node_modules/unist-util-position/index.js"],"names":["start","factory","end","module","exports","position","node","type","point","displayName","line","column","offset","isNaN"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAjB;AAEAE,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AAEAA,QAAQ,CAACL,KAAT,GAAiBA,KAAjB;AACAK,QAAQ,CAACH,GAAT,GAAeA,GAAf;;AAEA,SAASG,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAO;AAACN,IAAAA,KAAK,EAAEA,KAAK,CAACM,IAAD,CAAb;AAAqBJ,IAAAA,GAAG,EAAEA,GAAG,CAACI,IAAD;AAA7B,GAAP;AACD;;AAED,SAASL,OAAT,CAAiBM,IAAjB,EAAuB;AACrBC,EAAAA,KAAK,CAACC,WAAN,GAAoBF,IAApB;AAEA,SAAOC,KAAP;;AAEA,WAASA,KAAT,CAAeF,IAAf,EAAqB;AACnB,QAAIE,KAAK,GAAIF,IAAI,IAAIA,IAAI,CAACD,QAAb,IAAyBC,IAAI,CAACD,QAAL,CAAcE,IAAd,CAA1B,IAAkD,EAA9D;AAEA,WAAO;AACLG,MAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN,IAAc,IADf;AAELC,MAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,IAAgB,IAFnB;AAGLC,MAAAA,MAAM,EAAEC,KAAK,CAACL,KAAK,CAACI,MAAP,CAAL,GAAsB,IAAtB,GAA6BJ,KAAK,CAACI;AAHtC,KAAP;AAKD;AACF","sourcesContent":["'use strict'\n\nvar start = factory('start')\nvar end = factory('end')\n\nmodule.exports = position\n\nposition.start = start\nposition.end = end\n\nfunction position(node) {\n  return {start: start(node), end: end(node)}\n}\n\nfunction factory(type) {\n  point.displayName = type\n\n  return point\n\n  function point(node) {\n    var point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: isNaN(point.offset) ? null : point.offset\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}