{"ast":null,"code":"var _jsxFileName = \"/home/bian/Desktop/Summer/edu/src/App.js\";\nimport React, { Component } from \"react\";\nimport PostData from \"./data/astronomy.json\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.answerLetters = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\n    this.reviewQuestions = () => {\n      this.setState({\n        questionNum: 0,\n        isEnd: false,\n        isShowingAnswer: false,\n        chosenAnswer: \"\",\n        answersArray: [],\n        statusArray: [],\n        difficultyArray: [],\n        score: 0\n      });\n    };\n\n    this.nextQuestion = () => {\n      this.setState({\n        isShowingAnswer: false\n      });\n\n      if (this.state.isShowingAnswer) {\n        this.setState({\n          statusArray: [...this.state.statusArray, \"✕\"]\n        });\n      } else {\n        if (this.state.chosenAnswer === PostData[this.state.questionNum].correct) {\n          this.setState({\n            score: this.state.score + 1,\n            statusArray: [...this.state.statusArray, \"✓\"]\n          });\n        } else {\n          this.setState({\n            statusArray: [...this.state.statusArray, \"✕\"]\n          });\n        }\n      }\n\n      this.setState({\n        answersArray: [...this.state.answersArray, this.state.chosenAnswer],\n        chosenAnswer: \"\"\n      });\n\n      if (this.state.questionNum + 1 < PostData.length) {\n        this.setState({\n          questionNum: this.state.questionNum + 1\n        });\n      } else {\n        this.setState({\n          isEnd: true\n        });\n      }\n    };\n\n    this.state = {\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0\n    };\n  }\n\n  setAnswer(event) {\n    console.log(event.target.value);\n    this.setState({\n      chosenAnswer: event.target.value,\n      checkStatus: true\n    });\n  }\n\n  showSolution() {\n    console.log(PostData[this.state.questionNum].correct);\n    this.setState({\n      isShowingAnswer: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Astronomy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), this.state.isEnd ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questionBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Score: \", this.state.score, \" / \", PostData.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Percentage:\", \" \", Math.round((this.state.score / PostData.length * 100).toFixed(2)), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), this.state.statusArray.map((answer, index) => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [index + 1, \". \", answer, \" \\xA0\\xA0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            span: true,\n            id: \"buttonDesign\",\n            style: {\n              position: \"relative\",\n              top: \"40px\"\n            },\n            onClick: e => this.reviewQuestions(),\n            children: \"Take quiz again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questionBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"questionTitleInner\",\n              id: \"questionTitle\",\n              children: [this.state.questionNum + 1, \".\\xA0\", PostData[this.state.questionNum].title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), PostData[this.state.questionNum].choices.map((option, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"questionBoxInner\",\n                    style: {\n                      backgroundColor: this.state.isShowingAnswer ? this.answerLetters[index] === PostData[this.state.questionNum].correct ? \"#00ff00\" : \"\" : this.state.chosenAnswer === this.answerLetters[index] ? \"pink\" : \"\",\n                      padding: \"15px\"\n                    },\n                    htmlFor: this.answerLetters[index],\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"optionText\",\n                      style: {\n                        textDecorationLine: this.state.isShowingAnswer && this.answerLetters[index] !== PostData[this.state.questionNum].correct ? \"line-through\" : \"none\",\n                        display: \"flex\",\n                        textDecorationThickness: \"1.5px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: {\n                          marginRight: \"12px\",\n                          flexShrink: \"0\"\n                        },\n                        onChange: this.setAnswer.bind(this),\n                        type: \"radio\",\n                        id: this.answerLetters[index],\n                        value: this.answerLetters[index],\n                        name: \"options\",\n                        checked: !this.state.isShowingAnswer && this.state.chosenAnswer === this.answerLetters[index]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 31\n                      }, this), option]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"buttonDesign\",\n          style: {\n            position: \"relative\",\n            top: \"40px\"\n          },\n          onClick: e => this.showSolution(),\n          children: \"Reveal Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"buttonDesign\",\n          style: {\n            position: \"fixed\",\n            top: \"40px\"\n          },\n          onClick: e => this.nextQuestion(),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bian/Desktop/Summer/edu/src/App.js"],"names":["React","Component","PostData","App","constructor","answerLetters","reviewQuestions","setState","questionNum","isEnd","isShowingAnswer","chosenAnswer","answersArray","statusArray","difficultyArray","score","nextQuestion","state","correct","length","setAnswer","event","console","log","target","value","checkStatus","showSolution","render","Math","round","toFixed","map","answer","index","position","top","e","title","choices","option","backgroundColor","padding","textDecorationLine","display","textDecorationThickness","marginRight","flexShrink","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PostData from \"./data/astronomy.json\";\nimport \"./style.css\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0,\n    };\n  }\n\n  answerLetters = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\n  reviewQuestions = () => {\n    this.setState({\n      questionNum: 0,\n      isEnd: false,\n      isShowingAnswer: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      difficultyArray: [],\n      score: 0,\n    });\n  };\n\n  setAnswer(event) {\n    console.log(event.target.value);\n    this.setState({\n      chosenAnswer: event.target.value,\n      checkStatus: true,\n    });\n  }\n\n  showSolution() {\n    console.log(PostData[this.state.questionNum].correct);\n    this.setState({\n      isShowingAnswer: true,\n    });\n  }\n\n  nextQuestion = () => {\n    this.setState({\n      isShowingAnswer: false,\n    });\n    if (this.state.isShowingAnswer) {\n      this.setState({\n        statusArray: [...this.state.statusArray, \"✕\"],\n      });\n    } else {\n      if (\n        this.state.chosenAnswer === PostData[this.state.questionNum].correct\n      ) {\n        this.setState({\n          score: this.state.score + 1,\n          statusArray: [...this.state.statusArray, \"✓\"],\n        });\n      } else {\n        this.setState({\n          statusArray: [...this.state.statusArray, \"✕\"],\n        });\n      }\n    }\n    this.setState({\n      answersArray: [...this.state.answersArray, this.state.chosenAnswer],\n      chosenAnswer: \"\",\n    });\n\n    if (this.state.questionNum + 1 < PostData.length) {\n      this.setState({\n        questionNum: this.state.questionNum + 1,\n      });\n    } else {\n      this.setState({\n        isEnd: true,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <center>\n          <h1>Astronomy</h1>\n          {this.state.isEnd ? (\n            <>\n              <div className=\"questionBox\">\n                <p>\n                  Score: {this.state.score} / {PostData.length}\n                </p>\n                <p>\n                  Percentage:{\" \"}\n                  {Math.round(\n                    ((this.state.score / PostData.length) * 100).toFixed(2)\n                  )}\n                  %\n                </p>\n                {this.state.statusArray.map((answer, index) => {\n                  return (\n                    <span>\n                      {index + 1}. {answer} &nbsp;&nbsp;\n                    </span>\n                  );\n                })}\n                <br />\n                <br />\n              </div>\n              <span\n                span\n                id=\"buttonDesign\"\n                style={{ position: \"relative\", top: \"40px\" }}\n                onClick={(e) => this.reviewQuestions()}\n              >\n                Take quiz again\n              </span>\n              <p></p>\n            </>\n          ) : (\n            <>\n              <div className=\"questionBox\">\n                {/* {PostData.map((postDetail, index) => {\n              return <p>{postDetail.title}</p>;\n            })}  */}\n                <p className=\"questionTitleInner\" id=\"questionTitle\">\n                  {this.state.questionNum + 1}.&nbsp;\n                  {PostData[this.state.questionNum].title}\n                </p>\n                <hr></hr>\n\n                {PostData[this.state.questionNum].choices.map(\n                  (option, index) => {\n                    return (\n                      <div key={index}>\n                        <label>\n                          <div\n                            className=\"questionBoxInner\"\n                            style={{\n                              backgroundColor: this.state.isShowingAnswer\n                                ? this.answerLetters[index] ===\n                                  PostData[this.state.questionNum].correct\n                                  ? \"#00ff00\"\n                                  : \"\"\n                                : this.state.chosenAnswer ===\n                                  this.answerLetters[index]\n                                ? \"pink\"\n                                : \"\",\n                              padding: \"15px\",\n                            }}\n                            htmlFor={this.answerLetters[index]}\n                          >\n                            {/* {this.answerLetters[index]}. */}\n                            <label\n                              className=\"optionText\"\n                              style={{\n                                textDecorationLine:\n                                  this.state.isShowingAnswer &&\n                                  this.answerLetters[index] !==\n                                    PostData[this.state.questionNum].correct\n                                    ? \"line-through\"\n                                    : \"none\",\n                                display: \"flex\",\n                                textDecorationThickness: \"1.5px\",\n                              }}\n                            >\n                              <input\n                                style={{\n                                  marginRight: \"12px\",\n                                  flexShrink: \"0\",\n                                }}\n                                onChange={this.setAnswer.bind(this)}\n                                type=\"radio\"\n                                id={this.answerLetters[index]}\n                                value={this.answerLetters[index]}\n                                name=\"options\"\n                                checked={\n                                  !this.state.isShowingAnswer &&\n                                  this.state.chosenAnswer ===\n                                    this.answerLetters[index]\n                                }\n                              />\n                              {option}\n                            </label>\n                          </div>\n                        </label>\n                      </div>\n                    );\n                  }\n                )}\n\n                <p></p>\n              </div>\n            </>\n          )}\n        </center>\n        <center>\n          <span\n            id=\"buttonDesign\"\n            style={{ position: \"relative\", top: \"40px\" }}\n            onClick={(e) => this.showSolution()}\n          >\n            Reveal Answer\n          </span>\n          &nbsp;&nbsp;\n          <span\n            id=\"buttonDesign\"\n            style={{ position: \"fixed\", top: \"40px\" }}\n            onClick={(e) => this.nextQuestion()}\n          >\n            Next\n          </span>\n        </center>\n        <br /> <br />\n        <br /> <br />\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}