{"ast":null,"code":"'use strict';\n\nmodule.exports = footnote;\n\nvar footnoteReference = require('./footnote-reference');\n\nfunction footnote(h, node) {\n  var footnoteById = h.footnoteById;\n  var footnoteOrder = h.footnoteOrder;\n  var identifier = 1;\n\n  while (identifier in footnoteById) {\n    identifier++;\n  }\n\n  identifier = String(identifier); // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n\n  footnoteOrder.push(identifier);\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier: identifier,\n    children: [{\n      type: 'paragraph',\n      children: node.children\n    }],\n    position: node.position\n  };\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier: identifier,\n    position: node.position\n  });\n}","map":{"version":3,"sources":["/home/bian/Desktop/Summer/a/client/node_modules/mdast-util-to-hast/lib/handlers/footnote.js"],"names":["module","exports","footnote","footnoteReference","require","h","node","footnoteById","footnoteOrder","identifier","String","push","type","children","position"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB;;AAEA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,sBAAD,CAA/B;;AAEA,SAASF,QAAT,CAAkBG,CAAlB,EAAqBC,IAArB,EAA2B;AACzB,MAAIC,YAAY,GAAGF,CAAC,CAACE,YAArB;AACA,MAAIC,aAAa,GAAGH,CAAC,CAACG,aAAtB;AACA,MAAIC,UAAU,GAAG,CAAjB;;AAEA,SAAOA,UAAU,IAAIF,YAArB,EAAmC;AACjCE,IAAAA,UAAU;AACX;;AAEDA,EAAAA,UAAU,GAAGC,MAAM,CAACD,UAAD,CAAnB,CATyB,CAWzB;AACA;;AACAD,EAAAA,aAAa,CAACG,IAAd,CAAmBF,UAAnB;AAEAF,EAAAA,YAAY,CAACE,UAAD,CAAZ,GAA2B;AACzBG,IAAAA,IAAI,EAAE,oBADmB;AAEzBH,IAAAA,UAAU,EAAEA,UAFa;AAGzBI,IAAAA,QAAQ,EAAE,CAAC;AAACD,MAAAA,IAAI,EAAE,WAAP;AAAoBC,MAAAA,QAAQ,EAAEP,IAAI,CAACO;AAAnC,KAAD,CAHe;AAIzBC,IAAAA,QAAQ,EAAER,IAAI,CAACQ;AAJU,GAA3B;AAOA,SAAOX,iBAAiB,CAACE,CAAD,EAAI;AAC1BO,IAAAA,IAAI,EAAE,mBADoB;AAE1BH,IAAAA,UAAU,EAAEA,UAFc;AAG1BK,IAAAA,QAAQ,EAAER,IAAI,CAACQ;AAHW,GAAJ,CAAxB;AAKD","sourcesContent":["'use strict'\n\nmodule.exports = footnote\n\nvar footnoteReference = require('./footnote-reference')\n\nfunction footnote(h, node) {\n  var footnoteById = h.footnoteById\n  var footnoteOrder = h.footnoteOrder\n  var identifier = 1\n\n  while (identifier in footnoteById) {\n    identifier++\n  }\n\n  identifier = String(identifier)\n\n  // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier: identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier: identifier,\n    position: node.position\n  })\n}\n"]},"metadata":{},"sourceType":"script"}