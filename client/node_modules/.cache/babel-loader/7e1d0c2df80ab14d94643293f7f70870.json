{"ast":null,"code":"var _jsxFileName = \"/home/bian/Desktop/Summer/study/src/App.js\";\nimport React, { Component } from \"react\";\nimport PostData from \"./bio.json\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.answerLetters = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\n    this.nextQuestion = () => {\n      if (this.state.chosenAnswer === PostData[this.state.questionNum].correct) {\n        this.setState({\n          score: this.state.score + 1,\n          statusArray: [...this.state.statusArray, \"correct\"]\n        });\n      } else {\n        this.setState({\n          statusArray: [...this.state.statusArray, \"incorrect\"]\n        });\n      }\n\n      this.setState({\n        answersArray: [...this.state.answersArray, this.state.chosenAnswer],\n        chosenAnswer: \"\"\n      });\n\n      if (this.state.questionNum + 1 < PostData.length) {\n        this.setState({\n          questionNum: this.state.questionNum + 1\n        });\n      } else {\n        this.setState({\n          isEnd: true\n        });\n      }\n    };\n\n    this.state = {\n      questionNum: 0,\n      isEnd: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      score: 0\n    };\n  }\n\n  setAnswer(event) {\n    console.log(event.target.value);\n    this.setState({\n      chosenAnswer: event.target.value,\n      checkStatus: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"AP Biology (MC)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), this.state.isEnd ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your score: \", this.state.score, \" / \", PostData.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Percentage: \", this.state.score / PostData.length * 100, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), this.state.statusArray.map((answer, index) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [index + 1, \". \", answer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questionBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"questionTitleInner\",\n              id: \"questionTitle\",\n              children: [this.state.questionNum + 1, \".\\xA0\", PostData[this.state.questionNum].title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), PostData[this.state.questionNum].choices.map((option, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"questionBoxInner\",\n                    style: {\n                      backgroundColor: this.state.chosenAnswer === this.answerLetters[index] ? \"pink\" : \"\",\n                      padding: \"15px\"\n                    },\n                    htmlFor: this.answerLetters[index],\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"optionText\",\n                      style: {\n                        display: \"flex\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: {\n                          marginRight: \"12px\",\n                          flexShrink: \"0\"\n                        },\n                        onChange: this.setAnswer.bind(this),\n                        type: \"radio\",\n                        id: this.answerLetters[index],\n                        value: this.answerLetters[index],\n                        name: \"options\",\n                        checked: this.state.chosenAnswer === this.answerLetters[index]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 31\n                      }, this), option]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 23\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"nextButton\",\n            style: {\n              position: \"relative\",\n              top: \"20px\"\n            },\n            onClick: e => this.nextQuestion(),\n            children: \"NEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bian/Desktop/Summer/study/src/App.js"],"names":["React","Component","PostData","App","constructor","answerLetters","nextQuestion","state","chosenAnswer","questionNum","correct","setState","score","statusArray","answersArray","length","isEnd","setAnswer","event","console","log","target","value","checkStatus","render","map","answer","index","title","choices","option","backgroundColor","padding","display","marginRight","flexShrink","bind","position","top","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PostData from \"./bio.json\";\nimport \"./style.css\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questionNum: 0,\n      isEnd: false,\n      chosenAnswer: \"\",\n      answersArray: [],\n      statusArray: [],\n      score: 0,\n    };\n  }\n\n  answerLetters = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\n  setAnswer(event) {\n    console.log(event.target.value);\n    this.setState({\n      chosenAnswer: event.target.value,\n      checkStatus: true,\n    });\n  }\n\n  nextQuestion = () => {\n    if (this.state.chosenAnswer === PostData[this.state.questionNum].correct) {\n      this.setState({\n        score: this.state.score + 1,\n        statusArray: [...this.state.statusArray, \"correct\"],\n      });\n    } else {\n      this.setState({\n        statusArray: [...this.state.statusArray, \"incorrect\"],\n      });\n    }\n    this.setState({\n      answersArray: [...this.state.answersArray, this.state.chosenAnswer],\n      chosenAnswer: \"\",\n    });\n\n    if (this.state.questionNum + 1 < PostData.length) {\n      this.setState({\n        questionNum: this.state.questionNum + 1,\n      });\n    } else {\n      this.setState({\n        isEnd: true,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <center>\n          <h1>AP Biology (MC)</h1>\n          {this.state.isEnd ? (\n            <>\n              <p>\n                Your score: {this.state.score} / {PostData.length}\n              </p>\n              <p>Percentage: {(this.state.score / PostData.length) * 100}%</p>\n              {this.state.statusArray.map((answer, index) => {\n                return (\n                  <p>\n                    {index + 1}. {answer}\n                  </p>\n                );\n              })}\n            </>\n          ) : (\n            <>\n              <div className=\"questionBox\">\n                {/* {PostData.map((postDetail, index) => {\n              return <p>{postDetail.title}</p>;\n            })}  */}\n                <p className=\"questionTitleInner\" id=\"questionTitle\">\n                  {this.state.questionNum + 1}.&nbsp;\n                  {PostData[this.state.questionNum].title}\n                </p>\n                <hr></hr>\n\n                {PostData[this.state.questionNum].choices.map(\n                  (option, index) => {\n                    return (\n                      <div key={index}>\n                        <label>\n                          <div\n                            className=\"questionBoxInner\"\n                            style={{\n                              backgroundColor:\n                                this.state.chosenAnswer ===\n                                this.answerLetters[index]\n                                  ? \"pink\"\n                                  : \"\",\n                              padding: \"15px\",\n                            }}\n                            htmlFor={this.answerLetters[index]}\n                          >\n                            {/* {this.answerLetters[index]}. */}\n                            <label\n                              className=\"optionText\"\n                              style={{ display: \"flex\" }}\n                            >\n                              <input\n                                style={{\n                                  marginRight: \"12px\",\n                                  flexShrink: \"0\",\n                                }}\n                                onChange={this.setAnswer.bind(this)}\n                                type=\"radio\"\n                                id={this.answerLetters[index]}\n                                value={this.answerLetters[index]}\n                                name=\"options\"\n                                checked={\n                                  this.state.chosenAnswer ===\n                                  this.answerLetters[index]\n                                }\n                              />\n                              {option}\n                            </label>\n                          </div>\n                        </label>\n                      </div>\n                    );\n                  }\n                )}\n                <p></p>\n              </div>\n              <span\n                id=\"nextButton\"\n                style={{ position: \"relative\", top: \"20px\" }}\n                onClick={(e) => this.nextQuestion()}\n              >\n                NEXT\n              </span>\n            </>\n          )}\n        </center>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}