{"ast":null,"code":"'use strict';\n\nmodule.exports = generateFootnotes;\n\nvar thematicBreak = require('./handlers/thematic-break');\n\nvar list = require('./handlers/list');\n\nvar wrap = require('./wrap');\n\nfunction generateFootnotes(h) {\n  var footnoteById = h.footnoteById;\n  var footnoteOrder = h.footnoteOrder;\n  var length = footnoteOrder.length;\n  var index = -1;\n  var listItems = [];\n  var def;\n  var backReference;\n  var content;\n  var tail;\n\n  while (++index < length) {\n    def = footnoteById[footnoteOrder[index].toUpperCase()];\n\n    if (!def) {\n      continue;\n    }\n\n    content = def.children.concat();\n    tail = content[content.length - 1];\n    backReference = {\n      type: 'link',\n      url: '#fnref-' + def.identifier,\n      data: {\n        hProperties: {\n          className: ['footnote-backref']\n        }\n      },\n      children: [{\n        type: 'text',\n        value: '↩'\n      }]\n    };\n\n    if (!tail || tail.type !== 'paragraph') {\n      tail = {\n        type: 'paragraph',\n        children: []\n      };\n      content.push(tail);\n    }\n\n    tail.children.push(backReference);\n    listItems.push({\n      type: 'listItem',\n      data: {\n        hProperties: {\n          id: 'fn-' + def.identifier\n        }\n      },\n      children: content,\n      position: def.position\n    });\n  }\n\n  if (listItems.length === 0) {\n    return null;\n  }\n\n  return h(null, 'div', {\n    className: ['footnotes']\n  }, wrap([thematicBreak(h), list(h, {\n    type: 'list',\n    ordered: true,\n    children: listItems\n  })], true));\n}","map":{"version":3,"sources":["/Users/bian/Desktop/CS/a/client/node_modules/mdast-util-to-hast/lib/footer.js"],"names":["module","exports","generateFootnotes","thematicBreak","require","list","wrap","h","footnoteById","footnoteOrder","length","index","listItems","def","backReference","content","tail","toUpperCase","children","concat","type","url","identifier","data","hProperties","className","value","push","id","position","ordered"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,iBAAjB;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,2BAAD,CAA3B;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,QAAD,CAAlB;;AAEA,SAASF,iBAAT,CAA2BK,CAA3B,EAA8B;AAC5B,MAAIC,YAAY,GAAGD,CAAC,CAACC,YAArB;AACA,MAAIC,aAAa,GAAGF,CAAC,CAACE,aAAtB;AACA,MAAIC,MAAM,GAAGD,aAAa,CAACC,MAA3B;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,GAAJ;AACA,MAAIC,aAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,IAAJ;;AAEA,SAAO,EAAEL,KAAF,GAAUD,MAAjB,EAAyB;AACvBG,IAAAA,GAAG,GAAGL,YAAY,CAACC,aAAa,CAACE,KAAD,CAAb,CAAqBM,WAArB,EAAD,CAAlB;;AAEA,QAAI,CAACJ,GAAL,EAAU;AACR;AACD;;AAEDE,IAAAA,OAAO,GAAGF,GAAG,CAACK,QAAJ,CAAaC,MAAb,EAAV;AACAH,IAAAA,IAAI,GAAGD,OAAO,CAACA,OAAO,CAACL,MAAR,GAAiB,CAAlB,CAAd;AACAI,IAAAA,aAAa,GAAG;AACdM,MAAAA,IAAI,EAAE,MADQ;AAEdC,MAAAA,GAAG,EAAE,YAAYR,GAAG,CAACS,UAFP;AAGdC,MAAAA,IAAI,EAAE;AAACC,QAAAA,WAAW,EAAE;AAACC,UAAAA,SAAS,EAAE,CAAC,kBAAD;AAAZ;AAAd,OAHQ;AAIdP,MAAAA,QAAQ,EAAE,CAAC;AAACE,QAAAA,IAAI,EAAE,MAAP;AAAeM,QAAAA,KAAK,EAAE;AAAtB,OAAD;AAJI,KAAhB;;AAOA,QAAI,CAACV,IAAD,IAASA,IAAI,CAACI,IAAL,KAAc,WAA3B,EAAwC;AACtCJ,MAAAA,IAAI,GAAG;AAACI,QAAAA,IAAI,EAAE,WAAP;AAAoBF,QAAAA,QAAQ,EAAE;AAA9B,OAAP;AACAH,MAAAA,OAAO,CAACY,IAAR,CAAaX,IAAb;AACD;;AAEDA,IAAAA,IAAI,CAACE,QAAL,CAAcS,IAAd,CAAmBb,aAAnB;AAEAF,IAAAA,SAAS,CAACe,IAAV,CAAe;AACbP,MAAAA,IAAI,EAAE,UADO;AAEbG,MAAAA,IAAI,EAAE;AAACC,QAAAA,WAAW,EAAE;AAACI,UAAAA,EAAE,EAAE,QAAQf,GAAG,CAACS;AAAjB;AAAd,OAFO;AAGbJ,MAAAA,QAAQ,EAAEH,OAHG;AAIbc,MAAAA,QAAQ,EAAEhB,GAAG,CAACgB;AAJD,KAAf;AAMD;;AAED,MAAIjB,SAAS,CAACF,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,SAAOH,CAAC,CACN,IADM,EAEN,KAFM,EAGN;AAACkB,IAAAA,SAAS,EAAE,CAAC,WAAD;AAAZ,GAHM,EAINnB,IAAI,CACF,CACEH,aAAa,CAACI,CAAD,CADf,EAEEF,IAAI,CAACE,CAAD,EAAI;AAACa,IAAAA,IAAI,EAAE,MAAP;AAAeU,IAAAA,OAAO,EAAE,IAAxB;AAA8BZ,IAAAA,QAAQ,EAAEN;AAAxC,GAAJ,CAFN,CADE,EAKF,IALE,CAJE,CAAR;AAYD","sourcesContent":["'use strict'\n\nmodule.exports = generateFootnotes\n\nvar thematicBreak = require('./handlers/thematic-break')\nvar list = require('./handlers/list')\nvar wrap = require('./wrap')\n\nfunction generateFootnotes(h) {\n  var footnoteById = h.footnoteById\n  var footnoteOrder = h.footnoteOrder\n  var length = footnoteOrder.length\n  var index = -1\n  var listItems = []\n  var def\n  var backReference\n  var content\n  var tail\n\n  while (++index < length) {\n    def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    content = def.children.concat()\n    tail = content[content.length - 1]\n    backReference = {\n      type: 'link',\n      url: '#fnref-' + def.identifier,\n      data: {hProperties: {className: ['footnote-backref']}},\n      children: [{type: 'text', value: '↩'}]\n    }\n\n    if (!tail || tail.type !== 'paragraph') {\n      tail = {type: 'paragraph', children: []}\n      content.push(tail)\n    }\n\n    tail.children.push(backReference)\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn-' + def.identifier}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'div',\n    {className: ['footnotes']},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n"]},"metadata":{},"sourceType":"script"}